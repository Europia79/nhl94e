Setting 1 byte of staging affects a bunch of bytes in the shorts.
All bytes are copied verbatim.
There are none of the shorts, it looks like, that aren't present in the staging.

Setting 00 in staging affects 40, 41, 42, 60 in shorts.
Setting some bytes in staging affects nothing.

The format of the staging buffer is as follows:
	The staging buffer is 0x200 bytes total.
	It consists of two parts.
	
	"Dictionary values"- Some values from 0 to FF. They are in ascending order. Some values are repeated. Each value may be copied some number of times to the shorts. Some values are ignored.
	The values cycle some number of times.
	Dictionary values comprise 0x100 bytes.
	
	"Descriptors"- Some values from 0 to 10. They are in ascending order. Some values are repeated. These values are not copied as is. Hacking them can cause decompression to not work. There is some significance as to how many copies of values there are. The values affect the locations of dictionary items being copied.
	Descriptors are always even numbers.
	Descriptors all start at 0 and go up to 0x12.
	Descriptors are always 0x100 bytes.	
	
	Each 1 byte of dictionary value corresopnds to 1 descriptor.
		
	The staging buffer is not super optimized for size.
	For choosing how many of a pair to write, it depends. The first pairs span e.g., 64 bytes, the last pair spans 1 byte.
	So a typical buffer will contain a lot of repeated value pairs especially at the beginning.
	
	Generally, SwapValueToken is used to compute which byte of staging gets used.
	
	For compression: 
		First thing is to observe there are 0x32 zeroes. 
		Then notice that staging[0x2A] is 0.
		Use compressed byte 0x54, since 0x54 / 2 = 0x2A.